{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xb0663c6e37a1FAC918fB2f1862Ba079d7Ec822F1",
    "txHash": "0xb8384b3faf074e25c8f24ba7c4a55e0f6d41933429a95fc7d7dfaf4918437c66"
  },
  "proxies": [
    {
      "address": "0xa67105BDE43c0651F4ade3183C85dd6738E9E966",
      "txHash": "0x6b33de540146e29aaca65c2e8120e50475a6f50e189cc73122eb788788f4ee79",
      "kind": "transparent"
    },
    {
      "address": "0x0610c44877e4cB442B5501F094291E8701761034",
      "txHash": "0xcf26e022c3c3b19aef133c9e3307868e46b3dd2693e9a84cedc89b732889e3c6",
      "kind": "transparent"
    },
    {
      "address": "0xA08Bc5Ef2A602d1C5E821BdFC0329160e03Af3f0",
      "txHash": "0x2a94d99fa9eb1208b6c4bfaf52c40e686dc08828e49e5dbd34a55fb1dbde57a1",
      "kind": "transparent"
    }
  ],
  "impls": {
    "bd0a8c259dacfe7d8e4dddd29e7752dfd29db4f5a6399e39b605ce2b6c853e65": {
      "address": "0xb6eb0ddB902767e0802ADb46257BB02fAb2dD721",
      "txHash": "0x5b76efd7b53ee715ca7d25e63755c7c456f492b0ab89b08961ac4123f1c52bad",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Vault",
            "src": "contracts/Vault.sol:15"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "Vault",
            "src": "contracts/Vault.sol:16"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "Vault",
            "src": "contracts/Vault.sol:17"
          },
          {
            "label": "aaveV3Addresses",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Vault",
            "src": "contracts/Vault.sol:18"
          },
          {
            "label": "compoundV2Addresses",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Vault",
            "src": "contracts/Vault.sol:19"
          },
          {
            "label": "distributeAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Vault",
            "src": "contracts/Vault.sol:21"
          },
          {
            "label": "distributeAmountLp",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Vault",
            "src": "contracts/Vault.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
